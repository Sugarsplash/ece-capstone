' D/A DIRECTION
#define DIGITAL_IN          1
#define DIGITAL_OUT         2
#define ANALOG_IN           3

' DIGITAL_IN SUB FUNCTIONS
#define PULL_UP_WEAK        0x01
#define PULL_UP_STRONG      0x02
#define PULL_DOWN_WEAK      0x03
#define PULL_DOWN_STRONG    0x04
#define NO_PULL             0x00

' DIGITAL_OUT SUB FUNCTIONS
#define INIT_LOW            0
#define INIT_HIGH           1
#define OUTPUT_PWM          2
#define OUTPUT_FREQ         3

' ANALOG_IN SUB FUNCTIONS
#define ADC_10BIT_2_3       0x00
#define ADC_10BIT_1_3       0x13
#define ADC_10BIT           0x11

' DIGITAL_OUT STATES
#define LOW 0
#define HIGH 1

' SENSORS
#define TEMP_DATA       1
#define SOIL_DATA       2
#define FLOW_DATA       29
#define RAIN_DATA_D     30
#define RAIN_DATA_A     3

' ENABLE SIGNALS
#define SENSORS_ENABLE  25
#define SOL_ENABLE      17

DIM result

result = GpioSetFunc(FLOW_DATA, DIGITAL_IN, NO_PULL)
IF result != 0 THEN
    PRINT "\nERROR: GpioSetFunc - RAIN_DATA_D\n"
ENDIF

result = GpioSetFunc(SOL_ENABLE, DIGITAL_OUT, INIT_LOW)
IF result != 0 THEN
    PRINT "\nERROR: GpioSetFunc - SOL_ENABLE\n"
ENDIF

FUNCTION flow_read()

    DIM flow : flow = GpioRead(FLOW_DATA)
    PRINT "\nFlow: "; flow
    
ENDFUNC flow

SUB irrigate(water_amount)

    DIM count : count = water_amount

    DIM last : last = 0
    DIM state : state = 0
    
    ' Turn on water
    GpioWrite(SOL_ENABLE, HIGH)
    
    // Tell phone water is flowing.
    Dim value$ : value$ = "1"
    //ble_update_flow(value$)
    
    ' Leave it on for specified period
    WHILE (count != 0)
        state = flow_read()
        IF (state == 1) THEN
            IF (last == 0) THEN
                count = count - 1
                last = 1
            ENDIF
        ELSE
            last = 0
        ENDIF
    ENDWHILE
    
    ' Turn off water
    GpioWrite(SOL_ENABLE, LOW)
    
    ' Tell phone water is no longer flowing
    value$ = "0"
    //ble_update_flow(value$)

ENDSUB

    PRINT "IRRIGATING: 500\n"
    irrigate(500)
    PRINT "\nFIN\n"